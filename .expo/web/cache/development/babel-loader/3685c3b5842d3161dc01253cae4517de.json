{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Jocalu/Desktop/CRUD-react-native/screens/UserDetail/UserDetailScreen.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ScrollView, TextInput, TouchableHighlight } from 'react-native-gesture-handler';\nimport firebase from \"../../database/firebase\";\nexport default function UserDetailScreen(props) {\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      padding: 35\n    },\n    buttonDelete: {\n      backgroundColor: 'red',\n      padding: 10,\n      alignItems: 'center'\n    },\n    text: {\n      color: 'white',\n      fontSize: 20\n    },\n    inputGroup: {\n      flex: 1,\n      padding: 0,\n      marginBottom: 15,\n      borderBottomColor: '#cccccc',\n      borderBottomWidth: 1\n    }\n  });\n  var initialState = {\n    id: '',\n    name: '',\n    email: '',\n    phone: ''\n  };\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var getUserById = function getUserById(id) {\n    var dbRef, doc, userInfo;\n    return _regeneratorRuntime.async(function getUserById$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dbRef = firebase.db.collection('users').doc(id);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(dbRef.get());\n\n          case 3:\n            doc = _context.sent;\n            userInfo = doc.data();\n            setUser(_objectSpread(_objectSpread({}, userInfo), {}, {\n              id: doc.id\n            }));\n            setLoading(false);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var deleteUser = function deleteUser() {\n    var dbRef;\n    return _regeneratorRuntime.async(function deleteUser$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dbRef = firebase.db.collection('users').doc(props.route.params.userId);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(dbRef.delete());\n\n          case 3:\n            props.navigation.navigate('UsersList');\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var updateUser = function updateUser() {\n    var dbRef;\n    return _regeneratorRuntime.async(function updateUser$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            dbRef = firebase.db.collection('users').doc(user.id);\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(dbRef.set({\n              name: user.name,\n              email: user.email,\n              phone: user.phone\n            }));\n\n          case 3:\n            setUser(initialState);\n            props.navigation.navigate('UsersList');\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getUserById(props.route.params.userId);\n  }, []);\n\n  var handleChangeText = function handleChangeText(name, value) {\n    setUser(_objectSpread(_objectSpread({}, user), {}, _defineProperty({}, name, value)));\n  };\n\n  var openConfirmationAlert = function openConfirmationAlert() {\n    Alert.alert('Remove The User', 'Are you sure?', [{\n      text: 'Yes',\n      onPress: function onPress() {\n        return deleteUser();\n      }\n    }, {\n      text: 'No'\n    }]);\n  };\n\n  if (loading) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#9e9e9e\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Name User\",\n    value: user.name,\n    onChangeText: function onChangeText(value) {\n      return handleChangeText('name', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Email User\",\n    value: user.email,\n    onChangeText: function onChangeText(value) {\n      return handleChangeText('email', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Phone User\",\n    value: user.phone,\n    onChangeText: function onChangeText(value) {\n      return handleChangeText('phone', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.button,\n    color: \"green\",\n    text: \"Update User\",\n    onPress: function onPress() {\n      return updateUser();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.buttonDelete,\n    onPress: function onPress() {\n      return openConfirmationAlert();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Delete User\"))));\n}\nUserDetailScreen.propTypes = {\n  route: PropTypes.shape({\n    params: PropTypes.shape({\n      userId: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired,\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/Users/Jocalu/Desktop/CRUD-react-native/screens/UserDetail/UserDetailScreen.jsx"],"names":["React","useEffect","useState","PropTypes","ScrollView","TextInput","TouchableHighlight","firebase","UserDetailScreen","props","styles","StyleSheet","create","container","flex","padding","buttonDelete","backgroundColor","alignItems","text","color","fontSize","inputGroup","marginBottom","borderBottomColor","borderBottomWidth","initialState","id","name","email","phone","user","setUser","loading","setLoading","getUserById","dbRef","db","collection","doc","get","userInfo","data","deleteUser","route","params","userId","delete","navigation","navigate","updateUser","set","handleChangeText","value","openConfirmationAlert","Alert","alert","onPress","button","propTypes","shape","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ActivityIndicator,\n  View,\n  Alert,\n  StyleSheet,\n  Text,\n} from 'react-native';\nimport { ScrollView, TextInput, TouchableHighlight } from 'react-native-gesture-handler';\nimport firebase from '../../database/firebase';\n\nexport default function UserDetailScreen(props) {\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      padding: 35,\n    },\n    buttonDelete: {\n      backgroundColor: 'red',\n      padding: 10,\n      alignItems: 'center',\n    },\n    text: {\n      color: 'white',\n      fontSize: 20,\n    },\n    inputGroup: {\n      flex: 1,\n      padding: 0,\n      marginBottom: 15,\n      borderBottomColor: '#cccccc',\n      borderBottomWidth: 1,\n    },\n  });\n\n  const initialState = {\n    id: '',\n    name: '',\n    email: '',\n    phone: '',\n  };\n\n  const [user, setUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const getUserById = async (id) => {\n    const dbRef = firebase.db.collection('users').doc(id);\n    const doc = await dbRef.get();\n    const userInfo = doc.data();\n    setUser({\n      ...userInfo,\n      id: doc.id,\n    });\n    setLoading(false);\n  };\n\n  const deleteUser = async () => {\n    const dbRef = firebase.db.collection('users').doc(props.route.params.userId);\n    await dbRef.delete();\n    props.navigation.navigate('UsersList');\n  };\n\n  const updateUser = async () => {\n    const dbRef = firebase.db.collection('users').doc(user.id);\n    await dbRef.set({\n      name: user.name,\n      email: user.email,\n      phone: user.phone,\n    });\n    setUser(initialState);\n    props.navigation.navigate('UsersList');\n  };\n\n  useEffect(() => {\n    getUserById(props.route.params.userId);\n  }, []);\n\n  const handleChangeText = (name, value) => {\n    setUser({ ...user, [name]: value });\n  };\n\n  const openConfirmationAlert = () => {\n    Alert.alert('Remove The User', 'Are you sure?', [{ text: 'Yes', onPress: () => deleteUser() },\n      { text: 'No' }]);\n  };\n\n  if (loading) {\n    return (\n      <View>\n        <ActivityIndicator size=\"large\" color=\"#9e9e9e\" />\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.inputGroup}>\n        <TextInput\n          placeholder=\"Name User\"\n          value={user.name}\n          onChangeText={(value) => handleChangeText('name', value)}\n        />\n      </View>\n\n      <View style={styles.inputGroup}>\n        <TextInput\n          placeholder=\"Email User\"\n          value={user.email}\n          onChangeText={(value) => handleChangeText('email', value)}\n        />\n      </View>\n\n      <View style={styles.inputGroup}>\n        <TextInput\n          placeholder=\"Phone User\"\n          value={user.phone}\n          onChangeText={(value) => handleChangeText('phone', value)}\n        />\n      </View>\n\n      <View>\n        <TouchableHighlight\n          style={styles.button}\n          color=\"green\"\n          text=\"Update User\"\n          onPress={() => updateUser()}\n        />\n      </View>\n      <View>\n        <TouchableHighlight\n          style={styles.buttonDelete}\n          onPress={() => openConfirmationAlert()}\n        >\n          <Text style={styles.text}>Delete User</Text>\n        </TouchableHighlight>\n      </View>\n\n    </ScrollView>\n  );\n}\nUserDetailScreen.propTypes = {\n  route: PropTypes.shape({\n    params: PropTypes.shape({\n      userId: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}