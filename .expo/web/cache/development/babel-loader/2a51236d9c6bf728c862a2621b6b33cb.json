{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Jocalu/Desktop/CRUD-react-native/screens/UsersList/UsersList.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport firebase from \"../../database/firebase\";\nexport default function UsersList(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  useEffect(function () {\n    firebase.db.collection('users').onSnapshot(function (querySnapshot) {\n      var usersInfo = [];\n      querySnapshot.docs.forEach(function (doc) {\n        var _doc$data = doc.data(),\n            name = _doc$data.name,\n            email = _doc$data.email,\n            phone = _doc$data.phone;\n\n        usersInfo.push({\n          id: doc.id,\n          name: name,\n          email: email,\n          phone: phone\n        });\n      });\n      setUsers(usersInfo);\n    });\n  }, []);\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Create User\",\n    onPress: function onPress() {\n      return props.navigation.navigate('CreateUserScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), users.map(function (user) {\n    return React.createElement(ListItem, {\n      key: user.id,\n      bottomDivider: true,\n      onPress: function onPress() {\n        return props.navigation.navigate('UserDetailScreen', {\n          userId: user.id\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, React.createElement(ListItem.Chevron, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), React.createElement(Avatar, {\n      source: {\n        uri: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg'\n      },\n      rounded: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), React.createElement(ListItem.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, user.name), React.createElement(ListItem.Subtitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, user.email)));\n  }));\n}\nUsersList.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/Users/Jocalu/Desktop/CRUD-react-native/screens/UsersList/UsersList.jsx"],"names":["React","useEffect","useState","PropTypes","ScrollView","ListItem","Avatar","firebase","UsersList","props","users","setUsers","db","collection","onSnapshot","querySnapshot","usersInfo","docs","forEach","doc","data","name","email","phone","push","id","navigation","navigate","map","user","userId","uri","propTypes","shape","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport firebase from '../../database/firebase';\n\nexport default function UsersList(props) {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    firebase.db.collection('users').onSnapshot((querySnapshot) => {\n      const usersInfo = [];\n      querySnapshot.docs.forEach((doc) => {\n        const { name, email, phone } = doc.data();\n        usersInfo.push({\n          id: doc.id,\n          name,\n          email,\n          phone,\n        });\n      });\n      setUsers(usersInfo);\n    });\n  }, []);\n\n  return (\n    <ScrollView>\n      <Button\n        title=\"Create User\"\n        onPress={() => props.navigation.navigate('CreateUserScreen')}\n      />\n      {users.map((user) => (\n        <ListItem\n          key={user.id}\n          bottomDivider\n          onPress={() => props.navigation.navigate('UserDetailScreen', {\n            userId: user.id,\n          })}\n        >\n          <ListItem.Chevron />\n          <Avatar\n            source={{ uri: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg' }}\n            rounded\n          />\n          <ListItem.Content>\n            <ListItem.Title>{user.name}</ListItem.Title>\n            <ListItem.Subtitle>{user.email}</ListItem.Subtitle>\n          </ListItem.Content>\n        </ListItem>\n      ))}\n    </ScrollView>\n  );\n}\n\nUsersList.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}