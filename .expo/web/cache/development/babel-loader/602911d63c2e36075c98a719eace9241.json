{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/Jocalu/Desktop/CRUD-react-native/screens/UsersList/UsersList.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport firebase from \"../../database/firebase\";\nexport default function UsersList(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  useEffect(function () {\n    firebase.db.collection('users').onSnapshot(function (querySnapshot) {\n      var usersInfo = [];\n      querySnapshot.docs.forEach(function (doc) {\n        var _doc$data = doc.data(),\n            name = _doc$data.name,\n            email = _doc$data.email,\n            phone = _doc$data.phone;\n\n        usersInfo.push({\n          id: doc.id,\n          name: name,\n          email: email,\n          phone: phone\n        });\n      });\n      setUsers(usersInfo);\n    });\n  }, []);\n  var styles = StyleSheet.create({\n    buttonCreate: {\n      backgroundColor: '#2196f3',\n      padding: 10,\n      alignItems: 'center',\n      flex: 1,\n      marginHorizontal: 35\n    },\n    textWhite: {\n      color: 'white',\n      fontSize: 20\n    },\n    textBlack: {\n      color: 'black',\n      fontSize: 20\n    }\n  });\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, users.map(function (user) {\n    return React.createElement(ListItem, {\n      key: user.id,\n      bottomDivider: true,\n      onPress: function onPress() {\n        return props.navigation.navigate('UserDetailScreen', {\n          userId: user.id\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, React.createElement(ListItem.Chevron, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), React.createElement(Avatar, {\n      source: {\n        uri: 'https://lh3.googleusercontent.com/proxy/hzcIFTi6tu-A4hteXy2XI-5eDUNabwBIaz5tHmg8HY7ryyQZCH_9zYDKlU8dy1Godx-EuowKVwmlV_IDjzPpN4JuvvH9pfEr-P57iNlrXRSYXCNti3nHg7o'\n      },\n      rounded: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), React.createElement(ListItem.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, React.createElement(ListItem.Title, {\n      style: styles.textBlack,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, user.name), React.createElement(ListItem.Subtitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, user.email)));\n  }), React.createElement(TouchableOpacity, {\n    style: styles.buttonCreate,\n    onPress: function onPress() {\n      return props.navigation.navigate('CreateUserScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Create User\")));\n}\nUsersList.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/Users/Jocalu/Desktop/CRUD-react-native/screens/UsersList/UsersList.jsx"],"names":["React","useEffect","useState","PropTypes","ScrollView","TouchableOpacity","ListItem","Avatar","firebase","UsersList","props","users","setUsers","db","collection","onSnapshot","querySnapshot","usersInfo","docs","forEach","doc","data","name","email","phone","push","id","styles","StyleSheet","create","buttonCreate","backgroundColor","padding","alignItems","flex","marginHorizontal","textWhite","color","fontSize","textBlack","container","map","user","navigation","navigate","userId","uri","propTypes","shape","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, StyleSheet } from 'react-native';\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport { ListItem, Avatar } from 'react-native-elements';\nimport firebase from '../../database/firebase';\n\nexport default function UsersList(props) {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    firebase.db.collection('users').onSnapshot((querySnapshot) => {\n      const usersInfo = [];\n      querySnapshot.docs.forEach((doc) => {\n        const { name, email, phone } = doc.data();\n        usersInfo.push({\n          id: doc.id,\n          name,\n          email,\n          phone,\n        });\n      });\n      setUsers(usersInfo);\n    });\n  }, []);\n\n  const styles = StyleSheet.create({\n    buttonCreate: {\n      backgroundColor: '#2196f3',\n      padding: 10,\n      alignItems: 'center',\n      flex: 1,\n      marginHorizontal: 35,\n    },\n    textWhite: {\n      color: 'white',\n      fontSize: 20,\n    },\n    textBlack: {\n      color: 'black',\n      fontSize: 20,\n    },\n  });\n\n  return (\n    <ScrollView style={styles.container}>\n\n      {users.map((user) => (\n        <ListItem\n          key={user.id}\n          bottomDivider\n          onPress={() => props.navigation.navigate('UserDetailScreen', {\n            userId: user.id,\n          })}\n        >\n          <ListItem.Chevron />\n          <Avatar\n            source={{ uri: 'https://lh3.googleusercontent.com/proxy/hzcIFTi6tu-A4hteXy2XI-5eDUNabwBIaz5tHmg8HY7ryyQZCH_9zYDKlU8dy1Godx-EuowKVwmlV_IDjzPpN4JuvvH9pfEr-P57iNlrXRSYXCNti3nHg7o' }}\n            rounded\n          />\n          <ListItem.Content>\n            <ListItem.Title style={styles.textBlack}>{user.name}</ListItem.Title>\n            <ListItem.Subtitle>{user.email}</ListItem.Subtitle>\n          </ListItem.Content>\n        </ListItem>\n      ))}\n      <TouchableOpacity\n        style={styles.buttonCreate}\n        onPress={() => props.navigation.navigate('CreateUserScreen')}\n      >\n        <Text style={styles.textWhite}>Create User</Text>\n      </TouchableOpacity>\n    </ScrollView>\n  );\n}\n\nUsersList.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}